#R1 
    SELECT DISTINCT subs.userID,subs.lastname,subs.firstname, subs.addresscity, stations.name FROM trips 
    INNER JOIN subs ON subs.userID = trips.user
    INNER JOIN stations ON trips.start = stations.num
    WHERE subs.addresscity='Ixelles' and stations.name = 'FLAGEY';

    # Manque le fait que le trajet doit venir de Flagey

#R2
    SELECT trips.user
    FROM trips
    GROUP BY trips.user
    HAVING COUNT(trips.user) >= 300;

#R3
    SELECT DISTINCT trip1.user, trip2.user
    FROM trips AS trip1
    INNER JOIN trips AS trip2 ON trip1.start = trip2.start AND trip1.ending = trip2.ending AND trip1.user != trip2.user;

#R4
    SELECT *
    FROM
    (SELECT DISTINCT trip1.ending, trip1.endingTime, trip2.start, trip2.startTime
    FROM trips AS trip1
    INNER JOIN trips AS trip2 ON trip1.bicycle = trip2.bicycle AND trip1.startTime < trip2.startTime
    GROUP BY trip2.startTime
    ORDER BY trip1.startTime ASC)
    WHERE ending != start;

#R5
    SELECT users.userID, 
        (CASE WHEN subs.subscribeDate IS NOT NULL THEN subs.subscribeDate ELSE tempUsers.paymentDate END),
        COUNT(trips.user)
    FROM users
    LEFT OUTER JOIN trips ON trips.user = users.userID
    LEFT OUTER JOIN subs ON subs.userID = users.userID
    LEFT OUTER JOIN tempUsers ON tempUsers.userID = users.userID
    GROUP BY trips.user;

#R6
    SELECT stations.name, COUNT(trips.ending), COUNT(DISTINCT trips.user)
    FROM stations
    INNER JOIN trips ON trips.ending = stations.num
    GROUP BY trips.ending
    HAVING COUNT(trips.ending) >= 10;